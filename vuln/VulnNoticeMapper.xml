<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.starso.job.modules.vuln.mapper.VulnNoticeMapper">
  <resultMap id="BaseResultMap" type="com.starso.job.modules.vuln.domain.VulnNotice">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="customer_no" jdbcType="VARCHAR" property="customerNo" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="email_status" jdbcType="CHAR" property="emailStatus" />
    <result column="send_time" jdbcType="VARCHAR" property="sendTime" />
    <result column="vuln_ids" jdbcType="VARCHAR" property="vulnIds" />
    <result column="handle_status" jdbcType="VARCHAR" property="handleStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    id, customer_no, user_id, user_name, email, create_time, status, email_status, send_time, 
    vuln_ids,handle_status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from vuln_notice
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from vuln_notice
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.starso.job.modules.vuln.domain.VulnNotice">
    insert into vuln_notice (id, customer_no, user_id, 
      user_name, email, create_time, 
      status, email_status, send_time, 
      vuln_ids)
    values (#{id,jdbcType=VARCHAR}, #{customerNo,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=CHAR}, #{emailStatus,jdbcType=CHAR}, #{sendTime,jdbcType=VARCHAR}, 
      #{vulnIds,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.starso.job.modules.vuln.domain.VulnNotice">
    insert into vuln_notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="customerNo != null">
        customer_no,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="emailStatus != null">
        email_status,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
      <if test="vulnIds != null">
        vuln_ids,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="customerNo != null">
        #{customerNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="emailStatus != null">
        #{emailStatus,jdbcType=CHAR},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=VARCHAR},
      </if>
      <if test="vulnIds != null">
        #{vulnIds,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.starso.job.modules.vuln.domain.VulnNotice">
    update vuln_notice
    <set>
      <if test="customerNo != null">
        customer_no = #{customerNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="emailStatus != null">
        email_status = #{emailStatus,jdbcType=CHAR},
      </if>
      <if test="sendTime != null">
        send_time = #{sendTime,jdbcType=VARCHAR},
      </if>
      <if test="vulnIds != null">
        vuln_ids = #{vulnIds,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.starso.job.modules.vuln.domain.VulnNotice">
    update vuln_notice
    set customer_no = #{customerNo,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=CHAR},
      email_status = #{emailStatus,jdbcType=CHAR},
      send_time = #{sendTime,jdbcType=VARCHAR},
      vuln_ids = #{vulnIds,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <insert id="insertBatch" parameterType="list" >
    insert ignore into vuln_notice (id, customer_no, user_id, 
      user_name, email, create_time, 
      status, email_status, send_time, 
      vuln_ids)
    values 
    <foreach collection="list" item="item"  separator="," >
    (#{item.id,jdbcType=VARCHAR}, #{item.customerNo,jdbcType=VARCHAR}, #{item.userId,jdbcType=VARCHAR}, 
      #{item.userName,jdbcType=VARCHAR}, #{item.email,jdbcType=VARCHAR}, now(), 
      #{item.status,jdbcType=CHAR}, #{item.emailStatus,jdbcType=CHAR}, #{item.sendTime,jdbcType=VARCHAR}, 
      #{item.vulnIds,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <select id="selectNoHandleVuln" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from vuln_notice
    where handle_status = '0'
  </select>
</mapper>