<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.starso.job.modules.alert.mapper.WorkbenchDutyNoticeCountMapper">

    <sql id="Base_Column_List">
        id, role_type, notice_type, start_time, end_time, count
    </sql>

    <select id="selectDutyNoticeCount" parameterType="java.util.Map" resultType="com.starso.job.modules.alert.domain.WorkbenchDutyNoticeCount">
        select
        <include refid="Base_Column_List" />
        FROM
        workbench_duty_notice_count
        WHERE
        <foreach collection="list" item="item" open="(" separator=" or " close=")">
            (start_time = #{item.startTime,jdbcType=VARCHAR}
            AND end_time = #{item.endTime,jdbcType=VARCHAR}
            AND role_type = #{item.roleType,jdbcType=VARCHAR}
            AND notice_type = #{item.noticeType,jdbcType=VARCHAR})
        </foreach>
    </select>

    <delete id="deleteDutyNoticeCount" parameterType="java.util.List">
        delete from workbench_duty_notice_count
        <if test="list != null and list.size() > 0">
            where id not in
            <foreach collection="list" item="item" open="(" separator="," close=")">
                #{item.id,jdbcType=VARCHAR}
            </foreach>
        </if>;

        update workbench_duty_notice_count set count = count+1;
    </delete>

    <insert id="insertbatch" parameterType="java.util.List">
        insert into workbench_duty_notice_count(id, role_type, start_time, end_time, notice_type, count)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.id,jdbcType=VARCHAR}, #{item.roleType,jdbcType=VARCHAR}, #{item.startTime,jdbcType=VARCHAR},
            #{item.endTime,jdbcType=VARCHAR}, #{item.noticeType,jdbcType=VARCHAR}, 1)
        </foreach>
    </insert>
</mapper>
